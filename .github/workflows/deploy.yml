name: Plantour Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key ./build/libs/plantour-*.jar ${USER}@${HOST}:~/plantour.jar
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
            pid=$(pgrep -f "java -jar plantour.jar" || echo "")
            if [ ! -z "$pid" ]; then
              kill $pid
            fi
            nohup java -jar ~/plantour.jar > ~/plantour.log 2>&1 &
          '
          rm -f private_key

      - name: Check deployment
        env:
          HOST: ${{ secrets.EC2_HOST }}
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
            if pgrep -f "java -jar plantour.jar" > /dev/null
            then
              echo "Plantour application is running."
              exit 0
            else
              echo "Plantour application is not running."
              exit 1
            fi
          '
          rm -f private_key