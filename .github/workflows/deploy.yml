name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Debug EC2 connection
        env:
            EC2_HOST: ${{ secrets.EC2_HOST }}
            EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "EC2_USER: ${EC2_USER}"
          echo "Connecting to: ${EC2_USER}@${EC2_HOST}"
          echo "Connecting to: ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}"
          if [ -n "${EC2_HOST}" ]; then
           ping -c 4 ${EC2_HOST}
          else
            echo "EC2_HOST is not set"
          fi

      - name: Copy files via SCP
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
        run: |
          echo "${{ secrets.EC2_PEM }}" > key.pem
          chmod 600 key.pem
          scp -v -o StrictHostKeyChecking=no -i key.pem ./build/libs/plantour.jar ${EC2_USER}@${EC2_HOST}:/home/${EC2_USER}/


      - name: Deploy to EC2
        env:
          RDS_HOSTNAME: ${{ secrets.RDS_HOSTNAME }}
          RDS_PORT: ${{ secrets.RDS_PORT }}
          RDS_DB_NAME: ${{ secrets.RDS_DB_NAME }}
          RDS_USERNAME: ${{ secrets.RDS_USERNAME }}
          RDS_PASSWORD: ${{ secrets.RDS_PASSWORD }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
          BASE_URL: ${{ secrets.BASE_URL }}
          CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            export RDS_HOSTNAME=${RDS_HOSTNAME}
            export RDS_PORT=${RDS_PORT}
            export RDS_DB_NAME=${RDS_DB_NAME}
            export RDS_USERNAME=${RDS_USERNAME}
            export RDS_PASSWORD=${RDS_PASSWORD}
            export SECRET_KEY=${SECRET_KEY}
            export GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            export GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
            export GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
            export BASE_URL=${BASE_URL}
            export CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
            sudo systemctl stop plantour
            sudo mv /home/${{ secrets.EC2_USER }}/plantour.jar /path/to/deployment/plantour.jar
            sudo systemctl start plantour
          EOF