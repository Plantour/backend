name: Build and Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: plantour_backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        env:
          APP_DIR: /opt/plantour
          JAR_FILE: plantour.jar
          SERVICE_FILE: /etc/systemd/system/plantour.service
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          envs: APP_DIR,JAR_FILE,SERVICE_FILE
          script: |
            # Disable strict host key checking
            mkdir -p ~/.ssh
            echo "StrictHostKeyChecking no" >> ~/.ssh/config
            
            # Create application directory
            sudo mkdir -p $APP_DIR
            sudo chown ${{ secrets.EC2_USER }}:${{ secrets.EC2_USER }} $APP_DIR

            # Copy JAR file
            scp -o StrictHostKeyChecking=no ${{ github.workspace }}/build/libs/*.jar ${{ secrets.EC2_USER }}@localhost:$APP_DIR/$JAR_FILE
            
            # Set correct permissions
            sudo chown root:root $APP_DIR/$JAR_FILE
            sudo chmod 644 $APP_DIR/$JAR_FILE

            # Remove existing service file and create a new one
            sudo rm -f $SERVICE_FILE
            sudo tee $SERVICE_FILE > /dev/null << EOT
            [Unit]
            Description=Plantour Spring Boot Application
            After=network.target

            [Service]
            User=${{ secrets.EC2_USER }}
            ExecStart=/usr/bin/java -jar $APP_DIR/$JAR_FILE
            SuccessExitStatus=143
            Environment="RDS_HOSTNAME=${{ secrets.RDS_HOSTNAME }}"
            Environment="RDS_PORT=${{ secrets.RDS_PORT }}"
            Environment="RDS_DB_NAME=${{ secrets.RDS_DB_NAME }}"
            Environment="RDS_USERNAME=${{ secrets.RDS_USERNAME }}"
            Environment="RDS_PASSWORD=${{ secrets.RDS_PASSWORD }}"
            Environment="SECRET_KEY=${{ secrets.SECRET_KEY }}"
            Environment="GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}"
            Environment="GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}"
            Environment="GOOGLE_REDIRECT_URI=${{ secrets.GOOGLE_REDIRECT_URI }}"
            Environment="BASE_URL=${{ secrets.BASE_URL }}"
            Environment="CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}"

            [Install]
            WantedBy=multi-user.target
            EOT

            # Reload systemd, restart service, and check status
            sudo systemctl daemon-reload
            sudo systemctl restart plantour
            sudo systemctl status plantour

      - name: Check deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            sudo systemctl is-active --quiet plantour && echo "Plantour is running" || echo "Plantour is not running"